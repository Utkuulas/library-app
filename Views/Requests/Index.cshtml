@using LibraryApp.Models.ViewModels
@model RequestViewModel

@{
	ViewData["Title"] = "Requests";
	var pipe = " | ";
}

<h1>Requests</h1>

<form asp-controller="Requests" asp-action="Index">
	<p>
		<select asp-for="ConfirmationSwitch" asp-items="Model.Confirmation">
			<option value="1">All</option>
			<option value="2">Confirmed</option>
			<option value="3">Not Confirmed</option>
		</select>

		<input type="text" asp-for="SearchString" />
		<input type="submit" value="Filter" />
	</p>
</form>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].Id)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].Book!.ISBN)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].Book!.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].User!.Id)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].User!.Email)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].ConfirmationDate)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Requests!)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.ISBN)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.User!.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.User!.Email)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ConfirmationDate)
				</td>
				<td>
					@if (!item.IsConfirmed)
					{
						<a asp-action="Confirm" asp-route-id="@item.Id">Confirm</a>@pipe
						<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
					}
				</td>
			</tr>
		}
	</tbody>
</table>
