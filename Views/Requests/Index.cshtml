@using LibraryApp.Models.ViewModels
@model RequestViewModel

@{
	ViewData["Title"] = "Requests";
	var isAdmin = User.IsInRole("Admin");
}

<h1>Requests</h1>

<form asp-controller="Requests" asp-action="Index">
	<div class="d-flex row">
		<div class="col d-inline-flex">
			<select class="w-50 form-select" asp-for="ConfirmationSwitch" asp-items="Model.Confirmation">
				<option value="1">All</option>
				<option value="2">Confirmed</option>
				<option value="3">Not Confirmed</option>
			</select>

			<div class="ms-2 input-group">
				<input class="form-control" type="text" asp-for="SearchString" />
				<input class="btn btn-primary" type="submit" value="Filter" />
			</div>
		</div>
		<div class="col">
		</div>
	</div>
</form>
<table class="mt-3 table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].Id)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].Book!.ISBN)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].Book!.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].User!.Id)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Requests![0].User!.Email)
			</th>
			<th>
				<a asp-action="Index"
				   asp-route-sortOrder="@ViewData["ConfirmationDateSortParameter"]"
				   asp-route-searchString="@Model.SearchString"
				   asp-route-confirmationSwitch="@Model.Confirmation">
					@Html.DisplayNameFor(model => model.Requests![0].ConfirmationDate)
				</a>
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Requests!)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.ISBN)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.User!.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.User!.Email)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ConfirmationDate)
				</td>
				<td>
					<div class="d-flex justify-content-end">
						@if (!item.IsConfirmed)
						{
							if (isAdmin)
							{
								if (item.Book!.IsAvailable)
								{
									<a class="btn btn-success" asp-action="Confirm" asp-route-id="@item.Id"><i class="bi bi-check-lg"></i> OK</a>
								}
								else
								{
									<a class="ms-2 btn btn-secondary" disabled><i class="bi bi-check-lg"> OK</i></a>
								}
							}
							<a class="ms-2 btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash3"></i> Delete</a>
						}
					</div>
				</td>
			</tr>
		}
	</tbody>
</table>

@if (Model.Pagination!.TotalPages > 1)
{
	<nav>
		<ul class="pagination justify-content-center">

			@if (Model.Pagination.HasPreviousPage)
			{
				<li class="page-item">
					<a class="page-link"
					   asp-action="Index"
					   asp-route-pageNumber="@(Model.Pagination.PageIndex - 1)"
					   asp-route-sortOrder="@ViewData["CurrentSort"]"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-confirmationSwitch="@Model.Confirmation">
						Previous
					</a>
				</li>
			}
			else
			{
				<li class="page-item disabled">
					<span class="page-link">Previous</span>
				</li>
			}

			@for (int i = 1; i <= Model.Pagination.TotalPages; i++)
			{
				if (i == Model.Pagination.PageIndex)
				{
					<li class="page-item active">
						<span class="page-link">@i</span>
					</li>
				}
				else
				{
					<li class="page-item">
						<a class="page-link"
						   asp-action="Index"
						   asp-route-pageNumber="@i"
						   asp-route-sortOrder="@ViewData["CurrentSort"]"
						   asp-route-searchString="@Model.SearchString"
						   asp-route-confirmationSwitch="@Model.Confirmation">
							@i
						</a>
					</li>
				}
			}

			@if (Model.Pagination.HasNextPage)
			{
				<li class="page-item">
					<a class="page-link"
					   asp-action="Index"
					   asp-route-pageNumber="@(Model.Pagination.PageIndex + 1)"
					   asp-route-sortOrder="@ViewData["CurrentSort"]"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-confirmationSwitch="@Model.Confirmation">
						Next
					</a>
				</li>
			}
			else
			{
				<li class="page-item disabled">
					<span class="page-link">Next</span>
				</li>
			}
		</ul>
	</nav>
}
