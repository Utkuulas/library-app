@model LibraryApp.Models.ViewModels.BookLoanViewModel

@{
	ViewData["Title"] = "Book Loans";
	var isAdmin = User.IsInRole("Admin");
}

<h1>Book Loans</h1>

<form asp-controller="BookLoans" asp-action="Index">
	<p>
		<input type="text" asp-for="SearchString" />
		<input type="submit" value="Filter" />
	</p>
</form>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].Id)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].Book!.ISBN)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].Book!.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].User!.Email)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].LoanDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].DueDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BookLoans![0].ReturnDate)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.BookLoans!)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.ISBN)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.User!.Email)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LoanDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.DueDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ReturnDate)
				</td>
				<td>
					@if (isAdmin && item.ReturnDate == null)
					{
						<a asp-action="MarkAsReturned" asp-route-id="@item.Id">Mark As Returned</a>
					}
				</td>
			</tr>
		}
	</tbody>
</table>
