@using LibraryApp.Models.ViewModels
@model BookGenreViewModel

@{
	ViewData["Title"] = "Books";
	var isAdmin = User.IsInRole("Admin");
}

<h1>Books</h1>

<form asp-controller="Books" asp-action="Index">
	<div class="d-flex row">
		<div class="d-inline-flex col">
			<select class="w-50 form-select" asp-for="BookGenre" asp-items="Model.Genres">
				<option value="">All</option>
			</select>

			<div class="ms-2 input-group">
				<input class="form-control" type="text" asp-for="SearchString" />
				<input class="btn btn-primary" type="submit" value="Filter" />
			</div>
		</div>
		<div class="col text-end">
			@if (isAdmin)
			{
				<a class="btn btn-primary" asp-action="Create"><i class="bi bi-plus-square"></i> New Book</a>
			}
		</div>
	</div>
</form>
<table class="mt-3 table">
	<thead>
		<tr>
			<th>
			</th>
			<th>
				<a asp-action="Index"
				   asp-route-sortOrder="@ViewData["TitleSortParameter"]"
				   asp-route-searchString="@Model.SearchString"
				   asp-route-bookGenre="@Model.BookGenre">
					@Html.DisplayNameFor(model => model.BookListItems![0].Book!.Title)
				</a>
			</th>
			<th>
				<a asp-action="Index"
				   asp-route-sortOrder="@ViewData["AuthorSortParameter"]"
				   asp-route-searchString="@Model.SearchString"
				   asp-route-bookGenre="@Model.BookGenre">
					@Html.DisplayNameFor(model => model.BookListItems![0].Book!.Author)
				</a>
			</th>
			<th>
				<a asp-action="Index"
				   asp-route-sortOrder="@ViewData["ISBNSortParameter"]"
				   asp-route-searchString="@Model.SearchString"
				   asp-route-bookGenre="@Model.BookGenre">
					@Html.DisplayNameFor(model => model.BookListItems![0].Book!.ISBN)
				</a>
			</th>
			<th>
				<a asp-action="Index"
				   asp-route-sortOrder="@ViewData["PublishedYearSortParameter"]"
				   asp-route-searchString="@Model.SearchString"
				   asp-route-bookGenre="@Model.BookGenre">
					@Html.DisplayNameFor(model => model.BookListItems![0].Book!.PublishedYear)
				</a>
			</th>
			<th>
				<a asp-action="Index"
				   asp-route-sortOrder="@ViewData["GenreSortParameter"]"
				   asp-route-searchString="@Model.SearchString"
				   asp-route-bookGenre="@Model.BookGenre">
					@Html.DisplayNameFor(model => model.BookListItems![0].Book!.Genre)
				</a>
			</th>
			<th>
				<div class="d-flex justify-content-center">
					<div class="d-flex justify-content-center">
						<a asp-action="Index"
						   asp-route-sortOrder="@ViewData["IsAvailableSortParameter"]"
						   asp-route-searchString="@Model.SearchString"
						   asp-route-bookGenre="@Model.BookGenre">
							@Html.DisplayNameFor(model => model.BookListItems![0].Book!.IsAvailable)
						</a>
					</div>
				</div>
			</th>
			<th></th>
		</tr>
	</thead>

	<tbody>
		@foreach (var item in Model.BookListItems!)
		{
			<tr>
				<td>
					@if (item.Book!.Image != null)
					{
						<img src="data:@item.Book!.Image;base64,@Convert.ToBase64String(((byte[])item.Book!.Image!.Data!))"
							 class="img-thumbnail" style="height:120px; width:100px; min-width:100px;" />
					}
					else
					{
						<img src="~/images/defaults/default-book-cover.png" alt="Default Book Cover"
							 class="img-thumbnail" style="height:120px; width:100px; min-width:100px;" />
					}
				</td>
				<td>
					<a asp-action="Details" asp-route-id="@item.Book.Id">@Html.DisplayFor(modelItem => item.Book!.Title)</a>
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.Author)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.ISBN)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.PublishedYear)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book!.Genre)
				</td>
				<td>
					<div class="d-flex justify-content-center">
						@if (item.Book!.IsAvailable)
						{
							<i class="bi bi-check-circle-fill text-success" title="Available"></i>
						}
						else
						{
							<i class="bi bi-x-circle-fill text-danger" title="Unavailable"></i>
						}
					</div>
				</td>
				<td>
					<div class="d-flex justify-content-end">
						@if (isAdmin)
						{
							<a class="ms-2 btn btn-success" asp-action="Edit" asp-route-id="@item.Book!.Id"><i class="bi bi-pencil-square"></i> Edit</a>
							<a class="ms-2 btn btn-danger" asp-action="Delete" asp-route-id="@item.Book!.Id"><i class="bi bi-trash3"></i> Delete</a>
						}
						@if (!isAdmin)
						{
							@if (!item.IsRequestSent && item.Book.IsAvailable)
							{
								<a class="ms-2 btn btn-success" asp-action="GenerateRequest" asp-route-id="@item.Book!.Id"><i class="bi bi-save2"></i> Borrow</a>
							}
							else
							{
								<a class="ms-2 btn btn-secondary" disabled><i class="bi bi-save2"></i> Borrow</a>
							}
						}
					</div>
				</td>
			</tr>
		}
	</tbody>
</table>

@if (Model.Pagination!.TotalPages > 1)
{
	<nav>
		<ul class="pagination justify-content-center">

			@if (Model.Pagination.HasPreviousPage)
			{
				<li class="page-item">
					<a class="page-link"
					   asp-action="Index"
					   asp-route-pageNumber="@(Model.Pagination.PageIndex - 1)"
					   asp-route-sortOrder="@ViewData["CurrentSort"]"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-bookGenre="@Model.BookGenre">
						Previous
					</a>
				</li>
			}
			else
			{
				<li class="page-item disabled">
					<span class="page-link">Previous</span>
				</li>
			}

			@for (int i = 1; i <= Model.Pagination.TotalPages; i++)
			{
				if (i == Model.Pagination.PageIndex)
				{
					<li class="page-item active">
						<span class="page-link">@i</span>
					</li>
				}
				else
				{
					<li class="page-item">
						<a class="page-link"
						   asp-action="Index"
						   asp-route-pageNumber="@i"
						   asp-route-sortOrder="@ViewData["CurrentSort"]"
						   asp-route-searchString="@Model.SearchString"
						   asp-route-bookGenre="@Model.BookGenre">
							@i
						</a>
					</li>
				}
			}

			@if (Model.Pagination.HasNextPage)
			{
				<li class="page-item">
					<a class="page-link"
					   asp-action="Index"
					   asp-route-pageNumber="@(Model.Pagination.PageIndex + 1)"
					   asp-route-sortOrder="@ViewData["CurrentSort"]"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-bookGenre="@Model.BookGenre">
						Next
					</a>
				</li>
			}
			else
			{
				<li class="page-item disabled">
					<span class="page-link">Next</span>
				</li>
			}
		</ul>
	</nav>
}


