@model LibraryApp.Models.Book

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>
<hr />

<div class="mt-2 row">
    <div class="mt-3 col-3">
        @if (Model.Image != null && TempData["TempImagePath"] == null)
        {
            <img src="data:@Model!.Image!.FileType;base64,@Convert.ToBase64String(Model.Image.Data!)"
            class="img-thumbnail" style="max-height:306px;" />
        } 
        else if (TempData["TempImagePath"] != null)
        {
            <img src="@TempData["TempImagePath"]" class="img-thumbnail" style="max-height:306px;" />
        }
        else
        {
            <img src="~/images/defaults/default-book-cover.png" alt="Default Book Cover"
                 class="img-thumbnail" />
        }

        <form id="uploadImageForm" class="mt-2" asp-action="UploadTempImage" asp-controller="Books" enctype="multipart/form-data" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="process" value="edit" />
            <div class="form-group" style="width:78%;">
                <label asp-for="Image.FileName">Select Image</label>
                <input type="file" class="form-control" name="file" />
            </div>
            <button type="submit" class="btn btn-primary mt-3"><i class="bi bi-upload"></i> Upload</button>
        </form>
    </div>
    <div class="ms-4 col">
        <div class="row">
            <div class="col-md-4">
                <form asp-action="Edit">
                    @* <div asp-validation-summary="ModelOnly" class="text-danger"></div> *@
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="IsAvailable" />
                    <input type="hidden" name="tempImagePath" value="@TempData["TempImagePath"]" />
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="mt-3 form-group">
                        <label asp-for="Author" class="control-label"></label>
                        <input asp-for="Author" class="form-control" />
                        <span asp-validation-for="Author" class="text-danger"></span>
                    </div>
                    <div class="mt-3 form-group">
                        <label asp-for="ISBN" class="control-label"></label>
                        <input asp-for="ISBN" class="form-control" />
                        <span asp-validation-for="ISBN" class="text-danger"></span>
                    </div>
                    <div class="mt-3 form-group">
                        <label asp-for="PublishedYear" class="control-label"></label>
                        <input asp-for="PublishedYear" class="form-control" />
                        <span asp-validation-for="PublishedYear" class="text-danger"></span>
                    </div>
                    <div class="mt-3 form-group">
                        <label asp-for="Genre" class="control-label"></label>
                        <input asp-for="Genre" class="form-control" />
                        <span asp-validation-for="Genre" class="text-danger"></span>
                    </div>
                    <div class="mt-3 d-flex form-group">
                        <button type="submit" value="Save" class="btn btn-success"><i class="bi bi-floppy"></i> Save</button>
                        <a class="ms-2 btn btn-primary" asp-action="Index"><i class="bi bi-arrow-left"></i> Back</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@* <script>
    document.getElementById("uploadImageForm").addEventListener("submit", function (e) {
        const editFormInputs = document.querySelectorAll("#editForm input");

        editFormInputs.forEach(input => {
            const hidden = document.createElement("input");
            hidden.type = "hidden";
            hidden.name = input.name;
            hidden.value = input.value;

            e.target.appendChild(hidden);
        });
    });
</script> *@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
